import '../../domain/entities/notification.dart';

class NotificationModel extends Notifications {
  const NotificationModel({
    required super.id,
    required super.title,
    required super.body,
    required super.type,
    required super.priority,
    required super.status,
    required super.recipientId,
    required super.senderId,
    super.groupId,
    required super.createdAt,
    required super.updatedAt,
    required super.sentAt,
    super.readAt,
    required super.expiresAt,
    required super.channel,
    required super.isDelivered,
    required super.deviceToken,
    required super.actionUrl,
    required super.actions,
    required super.metadata,
    required super.retriesCount,
    super.errorMessage,
    required super.readCount,
    required super.adminId,
  });

  factory NotificationModel.fromEntity(Notifications entity) {
    return NotificationModel(
      id: entity.id,
      title: entity.title,
      body: entity.body,
      type: entity.type,
      priority: entity.priority,
      status: entity.status,
      recipientId: entity.recipientId,
      senderId: entity.senderId,
      groupId: entity.groupId,
      createdAt: entity.createdAt,
      updatedAt: entity.updatedAt,
      sentAt: entity.sentAt,
      readAt: entity.readAt,
      expiresAt: entity.expiresAt,
      channel: entity.channel,
      isDelivered: entity.isDelivered,
      deviceToken: entity.deviceToken,
      actionUrl: entity.actionUrl,
      actions: entity.actions,
      metadata: entity.metadata,
      retriesCount: entity.retriesCount,
      errorMessage: entity.errorMessage,
      readCount: entity.readCount,
      adminId: entity.adminId,
    );
  }

  Notifications toEntity() => this;

  factory NotificationModel.fromMap(Map<String, dynamic> map) =>
      NotificationModel(
        id: map['id'],
        title: map['title'],
        body: map['body'],
        type: map['type'],
        priority: map['priority'],
        status: map['status'],
        recipientId: map['recipient_id'],
        senderId: map['sender_id'],
        groupId: map['group_id'],
        createdAt: DateTime.parse(map['created_at']),
        updatedAt: DateTime.parse(map['updated_at']),
        sentAt: DateTime.parse(map['sent_at']),
        readAt: map['read_at'] == null ? null : DateTime.parse(map['read_at']),
        expiresAt: DateTime.parse(map['expires_at']),
        channel: map['channel'],
        isDelivered: map['is_delivered'],
        deviceToken: map['device_token'],
        actionUrl: map['action_url'],
        actions: List<String>.from(map['actions']),
        metadata: Map<String, dynamic>.from(map['metadata']),
        retriesCount: map['retries_count'],
        errorMessage: map['error_message'],
        readCount: map['read_count'],
        adminId: map['adminId'],
      );

  Map<String, dynamic> toMap() => {
        'id': id,
        'title': title,
        'body': body,
        'type': type,
        'priority': priority,
        'status': status,
        'recipient_id': recipientId,
        'sender_id': senderId,
        'group_id': groupId,
        'created_at': createdAt.toIso8601String(),
        'updated_at': updatedAt.toIso8601String(),
        'sent_at': sentAt.toIso8601String(),
        'read_at': readAt?.toIso8601String(),
        'expires_at': expiresAt.toIso8601String(),
        'channel': channel,
        'is_delivered': isDelivered,
        'device_token': deviceToken,
        'action_url': actionUrl,
        'actions': actions,
        'metadata': metadata,
        'retries_count': retriesCount,
        'error_message': errorMessage,
        'read_count': readCount,
        'adminId': adminId,
      };

  NotificationModel copyWith({
    String? id,
    String? title,
    String? body,
    String? type,
    String? priority,
    String? status,
    String? recipientId,
    String? senderId,
    String? groupId,
    DateTime? createdAt,
    DateTime? updatedAt,
    DateTime? sentAt,
    DateTime? readAt,
    DateTime? expiresAt,
    String? channel,
    bool? isDelivered,
    String? deviceToken,
    String? actionUrl,
    List<String>? actions,
    Map<String, dynamic>? metadata,
    int? retriesCount,
    String? errorMessage,
    int? readCount,
    String? adminId,
  }) {
    return NotificationModel(
      id: id ?? this.id,
      title: title ?? this.title,
      body: body ?? this.body,
      type: type ?? this.type,
      priority: priority ?? this.priority,
      status: status ?? this.status,
      recipientId: recipientId ?? this.recipientId,
      senderId: senderId ?? this.senderId,
      groupId: groupId ?? this.groupId,
      createdAt: createdAt ?? this.createdAt,
      updatedAt: updatedAt ?? this.updatedAt,
      sentAt: sentAt ?? this.sentAt,
      readAt: readAt ?? this.readAt,
      expiresAt: expiresAt ?? this.expiresAt,
      channel: channel ?? this.channel,
      isDelivered: isDelivered ?? this.isDelivered,
      deviceToken: deviceToken ?? this.deviceToken,
      actionUrl: actionUrl ?? this.actionUrl,
      actions: actions ?? List<String>.from(this.actions),
      metadata: metadata ?? Map<String, dynamic>.from(this.metadata),
      retriesCount: retriesCount ?? this.retriesCount,
      errorMessage: errorMessage ?? this.errorMessage,
      readCount: readCount ?? this.readCount,
      adminId: adminId ?? this.adminId,
    );
  }
}
